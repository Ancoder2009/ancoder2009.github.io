{"version":3,"file":"chunks/flags.min.js","sources":["webpack://GUI/./src/playground/flags.css","webpack://GUI/./src/playground/flags.jsx"],"sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./flags.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./flags.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./flags.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect, Provider} from 'react-redux';\nimport bindAll from 'lodash.bindall';\nimport {FormattedMessage} from 'react-intl';\n\nimport MenuBar from '../components/menu-bar/menu-bar.jsx';\nimport Box from '../components/box/box.jsx';\nimport Input from '../components/forms/input.jsx';\nimport Modal from '../components/webgl-modal/webgl-modal.jsx';\nimport ListMonitorComponent from '../components/monitor/list-monitor.jsx';\n\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport {setProjectTitle} from '../reducers/project-title';\n\nimport parseOptionsFromUrl from './parse-url-options.js';\n\nimport scratchLogo from '../components/menu-bar/scratch-logo.svg';\nimport styles from './flags.css';\n\nconst Field = ({children, default: defaultDescription, ...props}) => (\n    <p>\n        <label>\n            <span className={styles.label}>{children}</span>\n            <Input {...props} />\n            {defaultDescription && <span className={styles.default}>\n                {`(default: ${defaultDescription})`}\n            </span>}\n        </label>\n    </p>\n);\nconst Toggle = ({children, ...props}) => (\n    <p>\n        <label>\n            <input\n                type=\"checkbox\"\n                {...props}\n            />\n            <span className={styles.label}>{children}</span>\n        </label>\n    </p>\n);\nclass List extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleActivate',\n            'handleDeactivate',\n            'handleInput',\n            'handleRemove',\n            'handleKeyPress',\n            'handleFocus',\n            'handleAdd'\n        ]);\n\n        this.state = {\n            activeIndex: null,\n            activeValue: null\n        };\n    }\n\n    handleActivate (index) {\n        // Do nothing if activating the currently active item\n        if (this.state.activeIndex === index) {\n            return;\n        }\n\n        this.setState({\n            activeIndex: index,\n            activeValue: this.props.value[index]\n        });\n    }\n\n    handleDeactivate () {\n        // Submit any in-progress value edits on blur\n        if (this.state.activeIndex !== null) {\n            const newListValue = this.props.value.slice();\n            newListValue[this.state.activeIndex] = this.state.activeValue;\n            this.props.onChange(newListValue);\n            this.setState({activeIndex: null, activeValue: null});\n        }\n    }\n\n    handleFocus (e) {\n        // Select all the text in the input when it is focused.\n        e.target.select();\n    }\n\n    handleKeyPress (e) {\n        // Special case for tab, arrow keys and enter.\n        // Tab / shift+tab navigate down / up the list.\n        // Arrow down / arrow up navigate down / up the list.\n        // Enter / shift+enter insert new blank item below / above.\n        const previouslyActiveIndex = this.state.activeIndex;\n        const {vm, targetId, id: variableId} = this.props;\n\n        let navigateDirection = 0;\n        if (e.key === 'Tab') navigateDirection = e.shiftKey ? -1 : 1;\n        else if (e.key === 'ArrowUp') navigateDirection = -1;\n        else if (e.key === 'ArrowDown') navigateDirection = 1;\n        if (navigateDirection) {\n            this.handleDeactivate(); // Submit in-progress edits\n            const newIndex = this.wrapListIndex(previouslyActiveIndex + navigateDirection, this.props.value.length);\n            this.setState({\n                activeIndex: newIndex,\n                activeValue: this.props.value[newIndex]\n            });\n            e.preventDefault(); // Stop default tab behavior, handled by this state change\n        } else if (e.key === 'Enter') {\n            // Submit in-progress edits\n            const listValue = this.props.value.slice();\n            listValue[this.state.activeIndex] = this.state.activeValue;\n            const newListItemValue = ''; // Enter adds a blank item\n            const newValueOffset = e.shiftKey ? 0 : 1; // Shift-enter inserts above\n            const newListValue = listValue.slice(0, previouslyActiveIndex + newValueOffset)\n                .concat([newListItemValue])\n                .concat(listValue.slice(previouslyActiveIndex + newValueOffset));\n            this.props.onChange(newListValue);\n            const newIndex = this.wrapListIndex(previouslyActiveIndex + newValueOffset, newListValue.length);\n            this.setState({\n                activeIndex: newIndex,\n                activeValue: newListItemValue\n            });\n            e.preventDefault();\n        }\n    }\n\n    handleInput (e) {\n        this.setState({activeValue: e.target.value});\n    }\n\n    handleRemove (e) {\n        e.preventDefault(); // Default would blur input, prevent that.\n        e.stopPropagation(); // Bubbling would activate, which will be handled here\n        const newListValue = this.props.value.slice(0, this.state.activeIndex)\n            .concat(this.props.value.slice(this.state.activeIndex + 1));\n        this.props.onChange(newListValue);\n        const newActiveIndex = Math.min(newListValue.length - 1, this.state.activeIndex);\n        this.setState({\n            activeIndex: newActiveIndex,\n            activeValue: newListValue[newActiveIndex]\n        });\n    }\n\n    handleAdd () {\n        // Add button appends a blank value and switches to it\n        const newListValue = this.props.value.concat(['']);\n        this.props.onChange([...this.props.value, '']);\n        this.setState({activeIndex: newListValue.length - 1, activeValue: ''});\n    }\n\n    wrapListIndex (index, length) {\n        return (index + length) % length;\n    }\n\n    render () {\n        return (\n            <Box\n                className={styles.monitorContainer}\n            >\n                <ListMonitorComponent\n                    activeIndex={this.state.activeIndex}\n                    activeValue={this.state.activeValue}\n                    onActivate={this.handleActivate}\n                    onAdd={this.handleAdd}\n                    onDeactivate={this.handleDeactivate}\n                    onFocus={this.handleFocus}\n                    onInput={this.handleInput}\n                    onKeyPress={this.handleKeyPress}\n                    onRemove={this.handleRemove}\n                    categoryColor=\"#9966ff\"\n                    width={428}\n                    draggable={true}\n                    {...this.props}\n                />\n            </Box>\n        );\n    }\n}\n\nclass Flags extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleSubmit',\n            'handleClickLogo',\n            'handleClickAbout',\n            'handleChangeLoadGriffpatch',\n            'handleChangeLoadPlugins',\n            'handleChangeCloudHost',\n            'handleChangeCloudSpecial',\n            'handleChangeUsername',\n            'handleChangeFps',\n            'handleChangeExtensionURLs',\n            'handleChangeImposeLimits',\n            'handleChangeSpriteFencing',\n            'handleChangeWidth',\n            'handleChangeHeight'\n        ]);\n        this.props.setTitle('Eç¾Šicques URL settings');\n\n        const { compatibilityMode, fps, spriteFencing, ...options } = parseOptionsFromUrl(false)\n        this.state = {\n            fps: fps !== undefined\n                ? fps\n                : compatibilityMode === false\n                ? 60\n                : undefined,\n            spriteFencing: spriteFencing === undefined\n                ? options.imposeLimits\n                : spriteFencing,\n            ...options\n        };\n    }\n    handleSubmit (e) {\n        e.preventDefault();\n\n        const {\n            loadGriffpatch,\n            loadPlugins,\n            cloudHost,\n            cloudSpecial,\n            username,\n            fps,\n            extensionURLs,\n            imposeLimits,\n            spriteFencing,\n            width,\n            height\n        } = this.state;\n        const params = [];\n        if (width !== undefined) params.push(`width=${width}`);\n        if (height !== undefined) params.push(`height=${height}`);\n        if (username !== undefined) params.push(`username=${encodeURIComponent(username)}`);\n        if (cloudHost !== undefined) {\n            params.push(`cloud_host=${encodeURIComponent(cloudHost.replace(/^ws?s:\\/\\//, ''))}`);\n        }\n        if (cloudSpecial !== undefined) params.push(`special_cloud=${cloudSpecial}`);\n        if (fps !== undefined) params.push(`fps=${fps}`);\n        if (imposeLimits !== undefined) params.push(`limits=${imposeLimits}`);\n        if (imposeLimits !== undefined || spriteFencing !== undefined) {\n            params.push(`fencing=${spriteFencing}`);\n        }\n        if (loadGriffpatch !== undefined) params.push(`load_griffpatch=${loadGriffpatch}`);\n        for (const url of extensionURLs) {\n            params.push(`extension=${encodeURIComponent(url)}`);\n        }\n        for (const url of loadPlugins) {\n            params.push(`load_plugin=${encodeURIComponent(url)}`);\n        }\n        window.location.href = './index.html' +\n            (params.length > 0 ? '?' + params.join('&') : '') +\n            window.location.hash;\n    }\n    handleClickLogo () {\n        window.location.href = window.location.href.replace(/flags(\\.html)?/, '');\n    }\n    handleClickAbout () {\n        window.location.href = 'https://github.com/SheepTester/scratch-gui#readme';\n    }\n    handleChangeLoadGriffpatch (e) {\n        this.setState({loadGriffpatch: e.target.checked});\n    }\n    handleChangeLoadPlugins (list) {\n        this.setState({loadPlugins: list});\n    }\n    handleChangeCloudHost (e) {\n        this.setState({cloudHost: e.target.value});\n    }\n    handleChangeCloudSpecial (e) {\n        this.setState({cloudSpecial: e.target.checked});\n    }\n    handleChangeUsername (e) {\n        this.setState({username: e.target.value});\n    }\n    handleChangeFps (e) {\n        this.setState({fps: e.target.value});\n    }\n    handleChangeExtensionURLs (list) {\n        this.setState({extensionURLs: list});\n    }\n    handleChangeImposeLimits (e) {\n        this.setState({imposeLimits: e.target.checked});\n    }\n    handleChangeSpriteFencing (e) {\n        this.setState({spriteFencing: e.target.checked});\n    }\n    handleChangeWidth (e) {\n        this.setState({width: +e.target.value});\n    }\n    handleChangeHeight (e) {\n        this.setState({height: +e.target.value});\n    }\n    render () {\n        const {\n            isRtl,\n            projectTitle,\n            setTitle,\n            ...componentProps\n        } = this.props;\n        const {\n            loadGriffpatch = false,\n            loadPlugins = [],\n            cloudHost = '',\n            cloudSpecial = false,\n            username = 'username',\n            fps = 30,\n            extensionURLs = [],\n            imposeLimits = true,\n            spriteFencing = true,\n            width = 480,\n            height = 360\n        } = this.state;\n        return (\n            <Box\n                className={styles.pageWrapper}\n                dir={isRtl ? 'rtl' : 'ltr'}\n                {...componentProps}\n            >\n                <MenuBar\n                    accountNavOpen={false}\n                    authorId=\"what do I put here lol\"\n                    authorThumbnailUrl=\"static/favicon.svg\"\n                    authorUsername=\"SheepTester\"\n                    canChangeLanguage={false}\n                    canCreateCopy={false}\n                    canCreateNew={false}\n                    canEdit={false}\n                    canEditTitle={false}\n                    canManageFiles={false}\n                    canRemix={false}\n                    canSave={false}\n                    canShare={false}\n                    className={styles.menuBarPosition}\n                    enableCommunity={false}\n                    isShared={false}\n                    logo={scratchLogo}\n                    renderLogin={console.log}\n                    showComingSoon={false}\n                    onClickAbout={this.handleClickAbout}\n                    onClickLogo={this.handleClickLogo}\n                />\n                <form className={styles.content} onSubmit={this.handleSubmit}>\n                    <h2>URL settings</h2>\n                    <Field value={width} onChange={this.handleChangeWidth} default=\"480\" type=\"number\" name=\"width\">\n                        Stage width\n                    </Field>\n                    <Field value={height} onChange={this.handleChangeHeight} default=\"360\" type=\"number\" name=\"height\">\n                        Stage height\n                    </Field>\n                    <Toggle checked={imposeLimits} onChange={this.handleChangeImposeLimits} name=\"limits\">\n                        Enforce reasonable limits?\n                        <sup>[1]</sup>\n                    </Toggle>\n                    <Toggle checked={spriteFencing} onChange={this.handleChangeSpriteFencing} name=\"fencing\">\n                        Prevent sprites from moving off-screen (i.e. enable sprite fencing)?\n                    </Toggle>\n                    <Field value={fps} onChange={this.handleChangeFps} default=\"30\" type=\"number\" name=\"fps\">\n                        Frames per second\n                    </Field>\n                    <List\n                        label=\"Extensions\"\n                        value={extensionURLs}\n                        onChange={this.handleChangeExtensionURLs}\n                    />\n                    <Toggle checked={loadGriffpatch} onChange={this.handleChangeLoadGriffpatch} name=\"load_griffpatch\">\n                        <FormattedMessage\n                            defaultMessage=\"Load Griffpatch's {previewFaqLink}?\"\n                            description=\"Scratch 3.0 FAQ description\"\n                            id=\"gui.aaab.zz\"\n                            values={{\n                                previewFaqLink: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"https://github.com/griffpatch/Scratch3-Dev-Tools\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"Scratch 3 Dev Tools\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.aaab.z1\"\n                                        />\n                                    </a>\n                                )\n                            }}\n                        />\n                    </Toggle>\n                    <Field value={username} onChange={this.handleChangeUsername} default={'\"username\"'} type=\"text\" name=\"username\">\n                        Username\n                    </Field>\n                    <List\n                        label=\"Custom editor scripts\"\n                        value={loadPlugins}\n                        onChange={this.handleChangeLoadPlugins}\n                    />\n                    <Field value={cloudHost} onChange={this.handleChangeCloudHost} default=\"saves cloud variables to localStorage\" type=\"text\" name=\"cloud_host\">\n                        Custom cloud host\n                        <sup>[3]</sup>\n                    </Field>\n                    <Toggle checked={cloudSpecial} onChange={this.handleChangeCloudSpecial} name=\"special_cloud\">\n                        <FormattedMessage\n                            defaultMessage=\"Use {previewFaqLink} from the {wpw}?\"\n                            description=\"Scratch 3.0 FAQ description\"\n                            id=\"gui.aaab.html_idk\"\n                            values={{\n                                previewFaqLink: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"https://github.com/SheepTester/htmlifier/wiki/Special-cloud-behaviours\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"special cloud variable behaviours\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.aaab.z1fdf\"\n                                        />\n                                    </a>\n                                ),\n                                wpw: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"https://sheeptester.github.io/htmlifier/\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"HTMLifier\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.aaab.z1fdf2\"\n                                        />\n                                    </a>\n                                )\n                            }}\n                        />\n                    </Toggle>\n                    <Box className={styles.buttonRow}>\n                        <button\n                            type=\"submit\"\n                            className={styles.backButton}\n                        >\n                            Done\n                        </button>\n                    </Box>\n\n                    <h2>More information</h2>\n                    <p>\n                        <sup>[1]</sup>\n                        The following limits are removed if the limits option is disabled:\n                    </p>\n                    <ul>\n                        <li>Maximum clone count</li>\n                        <li>List length</li>\n                        <li>Pen size</li>\n                        <li>Sound effects</li>\n                        <li>Mouse X/Y</li>\n                        <li>Say/think bubble length</li>\n                        <li>Simultaneous sounds</li>\n                        <li>Notes</li>\n                        <li>Tempo</li>\n                    </ul>\n                    <p>\n                        <sup>[2]</sup>\n                        Compatibility mode makes projects run at 30 fps. When\n                        disabled, projects will run at 60 fps.\n                    </p>\n                    <p>\n                        <sup>[3]</sup>\n                        Use a custom cloud host instead of the default\n                        behaviour, which is to save cloud variables to\n                        localStorage. Note that for some reason, Scratch doesn't\n                        want you to include the protocol (ie, omit <code>ws://</code> or <code>wss://</code>).\n                        <FormattedMessage\n                            defaultMessage=\" Also, unless you use the {previewFaqLink}, the cloud server cannot be {code} unless it's on localhost because this site is on HTTPS.\"\n                            description=\"Scratch 3.0 FAQ description\"\n                            id=\"gui.aaab.zzweee\"\n                            values={{\n                                previewFaqLink: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"https://github.com/SheepTester/scratch-gui/archive/gh-pages.zip\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"offline mod\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.aaab.z21\"\n                                        />\n                                    </a>\n                                ),\n                                code: (\n                                    <code>ws://</code>\n                                )\n                            }}\n                        />\n                    </p>\n                    <div className={styles.faqLinkText}>\n                        <FormattedMessage\n                            defaultMessage=\"See {previewFaqLink} for a list of additional features in Eç¾Šicques.\"\n                            description=\"Scratch 3.0 FAQ description\"\n                            id=\"gui.aaaa.previewfaq\"\n                            values={{\n                                previewFaqLink: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"https://github.com/SheepTester/scratch-gui#other-features\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"Github\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.aaaa.previewfaqlinktext\"\n                                        />\n                                    </a>\n                                )\n                            }}\n                        />\n                    </div>\n                </form>\n            </Box>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    projectTitle: state.scratchGui.projectTitle\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTitle: title => dispatch(setProjectTitle(title))\n});\n\nconst WrappedFlags = AppStateHOC(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Flags));\n\nconst appTarget = document.createElement('div');\ndocument.body.appendChild(appTarget);\n\nReactDOM.render(<WrappedFlags />, appTarget);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAEA;AAAA;AALA;AACA;AAUA;AAAA;AAAA;AACA;AADA;AAIA;AADA;AAIA;AAAA;AAPA;AACA;AAUA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAUA;AACA;AACA;AAFA;AAZA;AAgBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAiBA;;;;AAvIA;AACA;AAyIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAKA;AANA;AArBA;AAgCA;AACA;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA9BA;AAAA;AACA;AADA;AA8BA;AAAA;AACA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAiCA;AAAA;AACA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AACA;AAmCA;AAGA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AAEA;AAHA;AANA;AAJA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AAEA;AAHA;AAOA;AAEA;AACA;AAFA;AAKA;AAEA;AAHA;AAlBA;AAJA;AAgCA;AAAA;AAEA;AACA;AAFA;AAoCA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AAEA;AAHA;AAOA;AAbA;AAJA;AAuBA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AAEA;AAHA;AANA;AAJA;AAuBA;;;;AA9UA;AACA;AAgVA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;AAKA;AACA;AAEA;;;;A","sourceRoot":""}